name: Insurance Policy CI/CD

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        ports:
          - 5434:5432
        options: >-
          --health-cmd="pg_isready -U test -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      axon-server:
        image: axoniq/axonserver:latest
        ports:
          - 8124:8124
        options: >-
          --health-cmd="curl -f http://localhost:8024 || exit 1"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: Build all modules (skip tests)
        run: mvn clean install -DskipTests

      - name: Build Docker image
        if: github.ref == 'refs/heads/master'
        run: make build-docker-app

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/insurance-policy-service:latest
          file: ./presentation/Dockerfile
          context: ./presentation
